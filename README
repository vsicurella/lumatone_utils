Utilities for dealing with Lumatone files
-----------------------------------------

Keys are specified in tones and limmas.  A tone is one step
east-northeast, the whole tone in Bosanquet mappings.
A limma is one step southeast, the diatonic semitone in
Bosanquet mappings.

Example: making a magic mapping for 19 steps to an octave
covering what would be a perfect fourth in a Bosanquet mapping:

Take the color scheme from an existing mapping file and make
a new magic mapping using it with 19 steps to an octave
covering what would be a perfect fourth in a Bosanquet mapping:

./extract_scheme.py -t 60 -p 19 mappings/tricolour_c.ltn |
    ./apply_scheme.py -t 60 --gap 19 <(
    ./make_regular.py -t 6 -l 1 -k 8 4 -g 19 --channels 1 1 1 5 5
    ) -o mappings/pengcheng_right.ltn

The scripts are:

extract_scheme.py takes the colors from an existing mapping
and stores them in a file.  Use -p for the period of the scale
the colors match.

apply_scheme.py takes the file that comes out of extract_scheme.py,
and applies it to another mapping file.

make_regular.py makes a mapping file with all black keys.

Use the "-k" option to specify the key for your reference pitch
(default 60 for middle C).  This is measured in tones and limmas
relative to the note on section one that's usually called C
in Bosanquet mappings.

To make a useful new mapping file, you can use both
make_regular.py and apply_scheme.py as in the example above.

transpose.py changes the reference note for an existing mapping file.

dim.py makes new mapping files based on old ones, but with all colors
at half their original brightness.
